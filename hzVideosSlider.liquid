<style>
  .hz__videosSlider_{{ section.id }}{
    padding-top: {{section.settings.ptd}}px;
    padding-bottom: {{section.settings.pbd}}px;
    padding-left: {{section.settings.plrd}}px;
    padding-right: {{section.settings.plrd}}px;
    {% if section.settings.bg_img != blank %}
      background: url('{{ section.settings.bg_img |img_url: '4000x'}}');
    {% else %}
      background: {{section.settings.bg_clr}};
    {% endif %}
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
  }
  .hz__videosSlider_btn_{{ section.id }}{
    background: {{section.settings.bg_pri}};
    color: {{section.settings.label_pri}};
    border: 1px solid {{section.settings.borders_pri}};
    border-radius: {{section.settings.border_radius}}px;
    {% if section.settings.underline %}
      text-decoration: underline;
    {% endif %}
  }
  .hz__videosSlider_btn_{{ section.id }}:hover {
    background: {{section.settings.bg_sec}};
    color: {{section.settings.label_sec}};
    border: 1px solid {{section.settings.borders_sec}}
  }
  @media only screen and (max-width: 768px){
    .hz__videosSlider_{{ section.id }}{
      padding-top: {{section.settings.ptm}}px;
      padding-bottom: {{section.settings.pbm}}px;
      padding-left: {{section.settings.plrm}}px;
      padding-right: 0;
    }
  }
</style>

<section class="hz__videosSlider hz__videosSlider_{{ section.id }}">
  <div class="hz__videosSliderInner {{ section.settings.content_width }}">
    <div class="hz__videosSlider__header">
      <h2 class="hz__videosSlider__title hz__titleSecondary" style="color: {{ section.settings.clr }}">
        {{ section.settings.title }}
      </h2>
      {% if section.settings.label != blank %}
        <a
          class="hz__btn hz__videosSlider_btn hz__videosSlider_btn_{{ section.id }}"
          href="{{ section.settings.link }}"
        >
          <span>
            {{ section.settings.icon }}
          </span>
          <span>
            {{ section.settings.label }}
          </span>
        </a>
      {% endif %}
    </div>
    <div class="hz__videosSlider__body">
      <div class="hz__videosSlider__slides hz__videosSlider__slides_{{ section.id }}">
        {% for block in section.blocks %}
          {% if block.settings.video != blank %}
            <div class="hz__videosSlider__slide hz__videosSlider__slide_{{ block.id }}">
              <div class="hz__videoSlide_inner">
                <div class="hz__vsVideoSlide__video">
                  <video
                    preload="metadata"
                    {% if section.settings.autoplay %}
                      autoplay muted loop playsinline
                    {% endif %}
                  >
                    <source type="video/mp4" src="{{ block.settings.video }}">
                  </video>
                  {% unless section.settings.autoplay %}
                    <div class="hz__vsVideoSlide__overlay">
                      {% if block.settings.cover != blank %}
                        <img src="{{ block.settings.cover | img_url: '4000x' }}">
                      {% endif %}
                    </div>
                    <button class="hz__btn hz__videoSlide__playBtn">
                      <svg xmlns="http://www.w3.org/2000/svg" width="59" height="59" viewBox="0 0 59 59" fill="none">
                        <path d="M59 29.5C59 45.7924 45.7924 59 29.5 59C13.2076 59 0 45.7924 0 29.5C0 13.2076 13.2076 0 29.5 0C45.7924 0 59 13.2076 59 29.5Z" fill="white"/>
                        <path d="M23 23.2097C23.0002 22.8137 23.1045 22.425 23.302 22.0842C23.4995 21.7435 23.7829 21.4632 24.1227 21.2727C24.4625 21.0821 24.8461 20.9884 25.2335 21.0012C25.6209 21.0139 25.9978 21.1328 26.3249 21.3453L35.9979 27.6341C36.305 27.8338 36.5578 28.1094 36.733 28.4354C36.9082 28.7614 37 29.1274 37 29.4993C37 29.8712 36.9082 30.2371 36.733 30.5631C36.5578 30.8891 36.305 31.1647 35.9979 31.3644L26.3249 37.6547C25.9977 37.8673 25.6207 37.9861 25.2331 37.9989C24.8456 38.0116 24.4619 37.9177 24.1221 37.727C23.7822 37.5363 23.4988 37.2558 23.3014 36.9148C23.104 36.5738 22.9999 36.185 23 35.7888V23.2097Z" fill="black"/>
                      </svg>
                    </button>
                  {% endunless %}
                </div>
              </div>
            </div>
          {% endif %}
        {% endfor %}
      </div>
    </div>
  </div>
  {% render 'hzDelivery' %}
</section>

{% schema %}
{
  "name": "Videos Slider",
  "settings": [
    {
      "type": "header",
      "content":  "Section Content Width"
    },
    {
      "type": "select",
      "label": "Content Width",
      "id": "content_width",
      "options": [
        {
          "label": "Large",
          "value": "hz__contentWidth_pri"
        },
        {
          "label": "Medium",
          "value": "hz__contentWidth_sec"
        },
        {
          "label": "Small",
          "value": "hz__contentWidth_ter"
        }
      ],
      "default":"hz__contentWidth_sec"
    },
    {
      "type": "header",
      "content": "Padding Controls - Desktop"
    },
    {
      "type": "range",
      "label": "Padding Top",
      "id": "ptd",
      "unit": "px",
      "min": 0,
      "max": 200,
      "step": 2,
      "default": 44
    },
    {
      "type": "range",
      "label": "Padding Bottom",
      "id": "pbd",
      "unit": "px",
      "min": 0,
      "max": 200,
      "step": 2,
      "default": 44
    },
    {
      "type": "range",
      "label": "Padding Left & Right",
      "id": "plrd",
      "unit": "px",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 20
    },
    {
      "type": "header",
      "content": "Padding Controls - Mobile"
    },
    {
      "type": "range",
      "label": "Padding Top",
      "id": "ptm",
      "unit": "px",
      "min": 0,
      "max": 200,
      "step": 2,
      "default": 28
    },
    {
      "type": "range",
      "label": "Padding Bottom",
      "id": "pbm",
      "unit": "px",
      "min": 0,
      "max": 200,
      "step": 2,
      "default": 28
    },
    {
      "type": "range",
      "label": "Padding Left & Right",
      "id": "plrm",
      "unit": "px",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 50
    },
    {
     "type": "header",
     "content": "Section Background",
     },
     {
      "type": "image_picker",
      "label": "Background Image",
      "id": "bg_img"
    },
    {
      "type": "color_background",
      "label": "Background Color",
      "id": "bg_clr",
      "default":"transparent"
    },
    {
      "type": "header",
      "content": "Section Content"
    },
    {
      "type": "checkbox",
      "label": "Autoplay Videos",
      "id": "autoplay",
      "default":true
    },
    {
      "type": "text",
      "label": "Title",
      "id": "title",
      "default":"Add Title"
    },
    {
      "type": "header",
      "content": "Section Button Controls"
    },
    {
      "type": "url",
      "label": "Button URL",
      "id": "link"
    },
    {
      "type": "text",
      "label": "Button Label",
      "id": "label",
        "default":"Follow @Patcha"
    },
    {
      "type": "header",
      "content": "Button Layout Controls"
    },
    {
      "type": "range",
      "label": "Rounded Corners",
      "id": "border_radius",
      "min": 0,
      "max": 100,
      "unit": "px",
      "step": 1,
      "default": 10
    },
    {
      "type": "checkbox",
      "label": "Underline",
      "id": "underline",
      "default":false
    },
    {
      "type": "header",
      "content": "Button Colors Controls - Default"
    },
    {
      "type": "color",
      "label": "Button Background",
      "id": "bg_pri",
      "default":"#E1CDCD"
    },
    {
      "type": "color",
      "label": "Button Label",
      "id": "label_pri",
      "default": "#000"
    },
    {
      "type": "color",
      "label": "Button Borders",
      "id": "borders_pri",
      "default":"transparent"
    },
    {
      "type": "header",
      "content": "Button Colors Controls - On Hover"
    },
    {
      "type": "color",
      "label": "Button Background",
      "id": "bg_sec",
      "default":"#CDB9B9"
    },
    {
      "type": "color",
      "label": "Button Label",
      "id": "label_sec",
      "default": "#000"
    },
    {
      "type": "color",
      "label": "Button Borders",
      "id": "borders_sec",
      "default":"transparent"
    },

  ],
  "blocks": [
    {
      "type": "slider",
      "name": "Slide",
      "settings": [
        {
          "type": "url",
          "label": "Paste Video URL",
          "id": "video"
        },
        {
          "type": "image_picker",
          "label": "Cover Image (Optional)",
          "id": "cover"
        },
      ]
    }
  ],
  "presets": [
    {
      "name": "HZ Videos Slider",
      "category": "videos"
    }
  ]
}
{% endschema %}

<script>
  $(document).ready(function() {
    $('.hz__videosSlider__slides_{{ section.id }}').slick({
      slidesToShow: 4,
      autoplay: false,
      dots: false,
      arrows: false,
      infinite: false,
      cssEase: 'linear',
      responsive: [
        {
          breakpoint: 992,
          settings: {
            slidesToShow: 3.15,
            slidesToScroll: 1,
            dots: false
          }
        },
        {
          breakpoint: 768,
          settings: {
            slidesToShow: 2.15,
            slidesToScroll: 1,
            dots: false
          }
        },
        {
          breakpoint: 600,
          settings: {
            slidesToShow: 1.15,
            slidesToScroll: 1,
            dots: false
          }
        }
      ]
    });
  });
</script>
{% unless section.settings.autoplay %}
  <script>
    const hzVideos = document.querySelectorAll('.hz__vsVideoSlide__video video');
    const hzOverlays = document.querySelectorAll('.hz__vsVideoSlide__overlay');
    const hzBtns = document.querySelectorAll('.hz__videoSlide__playBtn');
    hzBtns.forEach((btn, index) => {
      btn.addEventListener('click', ()=>{
        hzVideos.forEach((video, index) => {
          video.pause();
          // hzOverlays[index].style.display = 'flex';
          hzBtns[index].style.display = 'flex';
        });
        hzOverlays[index].style.display = 'none';
        hzBtns[index].style.display = 'none';
        hzVideos[index].play();
      });
    });
    hzVideos.forEach((video, index) => {
      video.addEventListener('click', ()=> {
        video.pause();
        hzBtns[index].style.display = 'flex';
      })
    });
    hzVideos.forEach((video, index) => {
      video.addEventListener('ended', ()=> {
        video.pause();
        hzBtns[index].style.display = 'flex';
        hzOverlays[index].style.display = 'flex';
      });
    })
  </script>
{% endunless %}
