<style>
   .hz__faqs--{{section.id}}{
     background-color:{{section.settings.bg_clr}};
     {% if section.settings.bg_img != blank %}
       background-image: url('{{ section.settings.bg_img | img_url: '4000x' }}');
       background-position: center;
       background-size: cover;
       background-repeat: no-repeat;
     {% endif %}
     padding-top:{{section.settings.pdTopD}}px;
     padding-bottom:{{section.settings.pdBotD}}px;
     {% if section.settings.borders %}
       border-top:  2.4px solid {{section.settings.clr}};
       border-bottom: 2.4px solid {{section.settings.clr}};
     {% endif %}
   }
   .hz__faqs--{{section.id}} {

   }
  .hz__faqs-inner{padding-left:0;padding-right:0;}
  /* ===============MEDIA QUERRIES===================== */

   @media only screen and (max-width:768px){
     .hz__faqs--{{ section.id }}{
        padding-top:{{section.settings.pdTopM}}px;
        padding-bottom:{{section.settings.pdBotM}}px;
     }
   }
</style>

<section class="hz__faqs hz__faqs--{{ section.id }}">
  <div class="hz__faqs-inner  hz__containerMain hz__faqs-inner{{ section.id }}">
    <div class="hz__faqsBlocks">
      <div class="hz__faqsBlock hz__faqsBlock_faqs {% if section.settings.img == blank %} hz__faqsBlock_fullWidth {% endif %}">
        {% if section.settings.title != blank or section.settings.tag != blank %}
          <div class="hz__faqsHeader hz__secHeaderContainer">
            <h4 class="hz__secTagline hz__faqsTagline" style="color:{{ section.settings.clr }}">
              {{ section.settings.tag }}
            </h4>
            <h2 class="hz__faqsTitle hz__faqsTitle_desk" style="color:{{ section.settings.clr }};">
              {{ section.settings.title }}
            </h2>
            <h2 class="hz__faqsTitle hz__faqsTitle_mob" style="color:{{ section.settings.clr }};">
              {{ section.settings.title2 }}
            </h2>
          </div>
        {% endif %}
        <!-- ---------accordian----------- -->

        <div class="hz__fb_faqsContainer">
          {% for block in section.blocks %}
            <div class="hz__faqWrapper hz__faq{{ block.id }}">
              <div class="hz__faqHeader">
                <h5 class="hz__faqQuestion">{{ block.settings.question }}</h5>
                <span class="hz__faqToggleIcon hz__faqToggleIcon_plus">{% render 'hzIconPlus' %}</span>
                <span class="hz__faqToggleIcon hz__faqToggleIcon_minus">{% render 'hzIconMinus' %}</span>
              </div>
              <div class="hz__faqContent">
                {% if block.settings.text != blank %}
                  <div class="hz__faqContent_text" style="color:{{ section.settings.clr }}">
                    {{ block.settings.text }}
                  </div>
                {% endif %}
                {% for i in (1..5) %}
                  {% assign icon_key = 'icon' | append: i %}
                  {% assign text_key = 'text' | append: i %}

                  {% if block.settings[icon_key] != blank or block.settings[text_key] != blank %}
                    <div class="hz__faqContent_iwt {% if i == 1 and block.settings.text != blank %} hz__faqContent_iwt_push {% endif %}">
                      {% if block.settings[icon_key] != blank %}
                        <img src="{{ block.settings[icon_key] | img_url: '4000x' }}" alt="Icon {{ i }}">
                      {% endif %}
                      <p class="hz__faqContent_text">
                        {{ block.settings[text_key] }}
                      </p>
                    </div>
                  {% endif %}
                {% endfor %}
              </div>
            </div>
          {% endfor %}
        </div>
      </div>
      {% if section.settings.img != blank %}
        <div class="hz__faqsBlock hz__faqsBlock_media {% if section.settings.img_hidden %} hz__faqBlock_media_deskOnly {% endif %}">
          <img src="{{ section.settings.img | img_url: '4000x' }}">
        </div>
      {% endif %}
    </div>

    <!-- -------------------------------------------- -->
  </div>
</section>

{% schema %}
{
  "name": "FAQs",
  "settings": [
    {
      "type":"header",
      "content":"Padding Controls - Desktop"
    },
    {
      "type":"range",
      "label":"Padding Top",
      "id":"pdTopD",
      "unit":"px",
      "step":2,
      "min":0,
      "max":200,
      "default":80
    },
    {
      "type":"range",
      "label":"Padding Bottom",
      "id":"pdBotD",
      "unit":"px",
      "step":2,
      "min":0,
      "max":200,
      "default":80
    },
    {
      "type":"header",
      "content":"Padding Controls - Mobile"
    },
    {
      "type":"range",
      "label":"Padding Top",
      "id":"pdTopM",
      "unit":"px",
      "step":2,
      "min":0,
      "max":200,
      "default":40
    },
    {
      "type":"range",
      "label":"Padding Bottom",
      "id":"pdBotM",
      "unit":"px",
      "step":2,
      "min":0,
      "max":200,
      "default":40
    },
    {
      "type": "checkbox",
      "label": "Enable Section Borders",
      "id": "borders",
      "default": false
    },
     {
  	"type":"header",
  	"content":"Section Background"
    },
    {
      "type":"image_picker",
      "label":"Background Image",
      "id":"bg_img"
    },
    {
      "type":"color",
      "label":"Background Color",
      "id":"bg_clr",
      "default":"#FFF5F7"
    },
    {
      "type":"header",
      "content":"Section Content"
    },
    {
      "type": "text",
      "label": "Tagline",
      "id": "tag",
      "default":"Add Text Here"
    },
    {
      "type": "text",
      "label": "Title- Desktop",
      "id": "title",
      "default":"FAQs"
    },
    {
      "type": "text",
      "label": "Title - Mobile",
      "id": "title2",
      "default":"FREQUENTLY ASKED QUESTIONS"
    },
    {
      "type": "image_picker",
      "label": "Section Image",
      "id": "img"
    },
    {
      "type": "checkbox",
      "label": "Hide Image On Small Screens",
      "id": "img_hidden",
      "default": true
    },
    {
      "type":"header",
      "content":"Color Controls"
    },
    {
      "type": "color",
      "id": "clr",
      "label": "Content Color",
      "default":"#000"
    }

  ],
  "blocks":[
    {
      "type": "faqs",
      "name":"FAQ",
      "settings": [
        {
          "type": "inline_richtext",
          "label": "Question",
          "id": "question",
          "default":"Add Question"
        },
        {
          "type": "header",
          "content": "Answer Contents"
        },
        {
          "type": "richtext",
          "label": "Text",
          "id": "text"
        },
        {
          "type": "image_picker",
          "label": "Icon 1",
          "id": "icon1"
        },
        {
          "type": "text",
          "label": "Icon-1 Text",
          "id": "text1"
        },
        {
          "type": "image_picker",
          "label": "Icon 2",
          "id": "icon2"
        },
        {
          "type": "text",
          "label": "Icon-2 Text",
          "id": "text2"
        },
        {
          "type": "image_picker",
          "label": "Icon 3",
          "id": "icon3"
        },
        {
          "type": "text",
          "label": "Icon-3 Text",
          "id": "text3"
        },
        {
          "type": "image_picker",
          "label": "Icon 4",
          "id": "icon4"
        },
        {
          "type": "text",
          "label": "Icon-4 Text",
          "id": "text4"
        },
        {
          "type": "image_picker",
          "label": "Icon 5",
          "id": "icon5"
        },
        {
          "type": "text",
          "label": "Icon-5 Text",
          "id": "text5"
        }
      ]
    }
  ],
  "presets":[
    {
      "name":"HZ FAQs",
      "category":"faq"
    }
  ]
}
{% endschema %}

<script>
  const faqs = document.querySelectorAll('.hz__faqWrapper');
  faqs.forEach((question, index)=>{
    question.querySelector('.hz__faqHeader').addEventListener('click', ()=>{
      const isActive = question.classList.contains('active');

      faqs.forEach((otherQuestions, otherIndex)=>{
        if (otherQuestions !== question) {
          otherQuestions.classList.remove('active');
          otherQuestions.querySelector('.hz__faqContent').style.maxHeight = '0';
        }
      });

      if (!isActive) {
        question.classList.add('active');
        question.querySelector('.hz__faqContent').style.maxHeight = question.querySelector('.hz__faqContent').scrollHeight + 34 + 'px';
      } else {
        question.classList.remove('active');
        question.querySelector('.hz__faqContent').style.maxHeight = '0';
      }
    });
    if (index === 0) {
      question.classList.add('active');
      question.querySelector('.hz__faqContent').style.maxHeight = question.querySelector('.hz__faqContent').scrollHeight + 34 + 'px';
    }
  });
</script>
